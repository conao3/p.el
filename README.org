#+author: conao3
#+date: <2019-12-07 Sat>

[[https://github.com/conao3/ppp.el][https://raw.githubusercontent.com/conao3/files/master/blob/headers/png/ppp.el.png]]
[[https://github.com/conao3/ppp.el/blob/master/LICENSE][https://img.shields.io/github/license/conao3/ppp.el.svg?style=flat-square]]
[[https://github.com/conao3/ppp.el/releases][https://img.shields.io/github/tag/conao3/ppp.el.svg?style=flat-square]]
[[https://github.com/conao3/ppp.el/actions][https://github.com/conao3/ppp.el/workflows/Main%20workflow/badge.svg]]
[[https://app.codacy.com/project/conao3/ppp.el/dashboard][https://img.shields.io/codacy/grade/62a36f4f04524d5e8c758440e8071c45.svg?logo=codacy&style=flat-square]]
[[https://twitter.com/conao_3][https://img.shields.io/badge/patreon-become%20a%20patron-orange.svg?logo=patreon&style=flat-square]]
[[https://twitter.com/conao_3][https://img.shields.io/badge/twitter-@conao__3-blue.svg?logo=twitter&style=flat-square]]
[[https://conao3-support.slack.com/join/shared_invite/enQtNjUzMDMxODcyMjE1LWUwMjhiNTU3Yjk3ODIwNzAxMTgwOTkxNmJiN2M4OTZkMWY0NjI4ZTg4MTVlNzcwNDY2ZjVjYmRiZmJjZDU4MDE][https://img.shields.io/badge/chat-on_slack-blue.svg?logo=slack&style=flat-square]]

* Table of Contents
- [[#description][Description]]
- [[#install][Install]]
- [[#usage][Usage]]
- [[#customize][Customize]]
- [[#syntaxes][Syntaxes]]
- [[#information][Information]]
  - [[#donation][Donation]]
  - [[#community][Community]]
  - [[#contribution][Contribution]]
  - [[#migration][Migration]]
  - [[#license][License]]
  - [[#author][Author]]
  - [[#contributors][Contributors]]
  - [[#special-thanks][Special Thanks]]

* Description

* Install
Below install snippet using [[https://github.com/conao3/leaf.el][leaf.el]]

#+begin_src emacs-lisp
  (leaf ppp :ensure t)
#+end_src

* Usage
Just use below functions.
- ppp-sexp
- ppp-macroexpand
- ppp-macroexpand-all
- ppp-list
- ppp-plist
- ppp-debug

And those ~*-to-string~ functions.

* Customize
#+begin_src emacs-lisp
  (defcustom ppp-escape-newlines t
    "Value of `print-escape-newlines' used by ppp-* functions."
    :type 'boolean
    :group 'ppp)

  (defcustom ppp-debug-buffer-template "*PPP Debug buffer - %s*"
    "Buffer name for `ppp-debug'."
    :group 'ppp
    :type 'string)

  (defcustom ppp-minimum-warning-level-base :warning
    "Minimum level for debugging.
  It should be either :debug, :warning, :error, or :emergency.
  Every minimul-earning-level variable initialized by this variable.
  You can customize each variable like ppp-minimum-warning-level--{{pkg}}."
    :group 'ppp
    :type '(choice (const :tag ":debug"     :debug)
                   (const :tag ":warning"   :warning)
                   (const :tag ":error"     :error)
                   (const :tag ":emergency" :emergency)))
#+end_src

* Information
** Donation
I love OSS and I am dreaming of working on it as *full-time* job.

*With your support*, I will be able to spend more time at OSS!

[[https://www.patreon.com/conao3][https://c5.patreon.com/external/logo/become_a_patron_button.png]]

** Community
All feedback and suggestions are welcome!

You can use github issues, but you can also use [[https://conao3-support.slack.com/join/shared_invite/enQtNjUzMDMxODcyMjE1LWUwMjhiNTU3Yjk3ODIwNzAxMTgwOTkxNmJiN2M4OTZkMWY0NjI4ZTg4MTVlNzcwNDY2ZjVjYmRiZmJjZDU4MDE][Slack]]
if you want a more casual conversation.

** Contribution
We welcome PR!

*** Require tools for testing
- cask
  - install via brew
    #+begin_src shell
      brew install cask
    #+end_src

  - manual install
    #+begin_src shell
      cd ~/
      hub clone cask/cask
      export PATH="$HOME/.cask/bin:$PATH"
    #+end_src

*** Running test
Below operation flow is recommended.
#+begin_src shell
  make                              # Install git-hooks in local .git

  git branch [feature-branch]       # Create branch named [feature-branch]
  git checkout [feature-branch]     # Checkout branch named [feature-branch]

  # <edit loop>
  emacs ppp.el                      # Edit something you want

  make test                         # Test package via multi version Emacs
  git commit -am "brabra"           # Commit (auto-run test before commit)
  # </edit loop>

  hub fork                          # Create fork at GitHub
  git push [user] [feature-branch]  # Push feature-branch to your fork
  hub pull-request                  # Create pull-request
#+end_src

** Migration

** License
#+begin_example
  General Public License Version 3 (GPLv3)
  Copyright (c) Naoya Yamashita - https://conao3.com
  https://github.com/conao3/ppp.el/blob/master/LICENSE
#+end_example

** Author
- Naoya Yamashita ([[https://github.com/conao3][conao3]])

** Contributors
